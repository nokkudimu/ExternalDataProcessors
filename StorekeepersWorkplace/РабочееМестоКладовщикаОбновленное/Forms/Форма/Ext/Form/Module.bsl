
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Объект.Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьРасходныеОрдера()
	
	Объект.РасходныеОрдера.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Склады", Объект.Склад);
	Запрос.УстановитьПараметр("Организации", Объект.Организация);
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	        |	ПеремещениеТоваров.Ссылка КАК СсылкаПеремещение,
	        |	ПеремещениеТоваров.Дата КАК Дата,
	        |	ПеремещениеТоваров.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	        |ПОМЕСТИТЬ Перемещения
	        |ИЗ
	        |	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	        |ГДЕ
	        |	НЕ ПеремещениеТоваров.ПометкаУдаления
	        |	И ПеремещениеТоваров.Проведен
	        |	И ПеремещениеТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	        |	И ПеремещениеТоваров.СкладПолучатель В(&Склады)
	        |	И ПеремещениеТоваров.Организация В(&Организации)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	Перемещения.СсылкаПеремещение КАК СсылкаПеремещение,
	        |	Перемещения.Дата КАК Дата,
	        |	ПриходныйОрдерНаТовары.Ссылка КАК СсылкаПриход
	        |ПОМЕСТИТЬ ПриходникиРаспПеремещение
	        |ИЗ
	        |	Перемещения КАК Перемещения
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	        |		ПО Перемещения.СсылкаПеремещение.Ссылка = ПриходныйОрдерНаТовары.Распоряжение.Ссылка
	        |ГДЕ
	        |	НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ
	        |	Перемещения.СсылкаПеремещение,
	        |	Перемещения.Дата,
	        |	ПриходныйОрдерНаТовары.Ссылка
	        |ИЗ
	        |	Перемещения КАК Перемещения
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	        |		ПО Перемещения.ЗаказНаПеремещение.Ссылка = ПриходныйОрдерНаТовары.Распоряжение.Ссылка
	        |ГДЕ
	        |	НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	        |	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение
	        |ПОМЕСТИТЬ РасходникиСРаспоряжениями
	        |ИЗ
	        |	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	        |		ПО РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка = РасходныйОрдерНаТовары.Ссылка
	        |ГДЕ
	        |	НЕ РасходныйОрдерНаТовары.ПометкаУдаления
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	РасходникиСРаспоряжениями.Ссылка КАК Ссылка,
	        |	РасходникиСРаспоряжениями.Распоряжение КАК Распоряжение
	        |ПОМЕСТИТЬ РасходникиРаспЗаказы
	        |ИЗ
	        |	РасходникиСРаспоряжениями КАК РасходникиСРаспоряжениями
	        |ГДЕ
	        |	ТИПЗНАЧЕНИЯ(РасходникиСРаспоряжениями.Распоряжение) = ТИП(Документ.ЗаказНаПеремещение)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	РасходникиСРаспоряжениями.Ссылка КАК Ссылка,
	        |	РасходникиСРаспоряжениями.Распоряжение КАК Распоряжение
	        |ПОМЕСТИТЬ РасходникиРаспПерем
	        |ИЗ
	        |	РасходникиСРаспоряжениями КАК РасходникиСРаспоряжениями
	        |ГДЕ
	        |	ТИПЗНАЧЕНИЯ(РасходникиСРаспоряжениями.Распоряжение) = ТИП(Документ.ПеремещениеТоваров)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	Перемещения.СсылкаПеремещение КАК СсылкаПеремещение,
	        |	РасходникиРаспЗаказы.Ссылка КАК СсылкаРасход
	        |ПОМЕСТИТЬ РасходникиРаспЗаказыПеределанные
	        |ИЗ
	        |	Перемещения КАК Перемещения
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходникиРаспЗаказы КАК РасходникиРаспЗаказы
	        |		ПО Перемещения.ЗаказНаПеремещение.Ссылка = РасходникиРаспЗаказы.Распоряжение.Ссылка
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	РасходникиРаспЗаказыПеределанные.СсылкаПеремещение КАК СсылкаПеремещение,
	        |	РасходникиРаспЗаказыПеределанные.СсылкаРасход КАК СсылкаРасход
	        |ПОМЕСТИТЬ РасходникиРаспПеремещение
	        |ИЗ
	        |	РасходникиРаспЗаказыПеределанные КАК РасходникиРаспЗаказыПеределанные
	        |
	        |ОБЪЕДИНИТЬ
	        |
	        |ВЫБРАТЬ
	        |	РасходникиРаспПерем.Распоряжение,
	        |	РасходникиРаспПерем.Ссылка
	        |ИЗ
	        |	РасходникиРаспПерем КАК РасходникиРаспПерем
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	РасходникиРаспПеремещение.СсылкаРасход КАК СсылкаРасход,
	        |	ПриходникиРаспПеремещение.СсылкаПриход КАК СсылкаПриход,
	        |	ПриходникиРаспПеремещение.СсылкаПеремещение КАК СсылкаПеремещение,
	        |	РасходникиРаспПеремещение.СсылкаПеремещение КАК СсылкаПеремещение1
	        |ПОМЕСТИТЬ РасходникиИПриходники
	        |ИЗ
	        |	РасходникиРаспПеремещение КАК РасходникиРаспПеремещение
	        |		ПОЛНОЕ СОЕДИНЕНИЕ ПриходникиРаспПеремещение КАК ПриходникиРаспПеремещение
	        |		ПО РасходникиРаспПеремещение.СсылкаПеремещение = ПриходникиРаспПеремещение.СсылкаПеремещение
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	Перемещения.СсылкаПеремещение КАК СсылкаПеремещение,
	        |	Перемещения.Дата КАК Дата,
	        |	РасходникиИПриходники.СсылкаПриход КАК СсылкаПриход
	        |ПОМЕСТИТЬ ПеремещенияИПриходники
	        |ИЗ
	        |	Перемещения КАК Перемещения
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РасходникиИПриходники КАК РасходникиИПриходники
	        |		ПО Перемещения.СсылкаПеремещение = РасходникиИПриходники.СсылкаПеремещение
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	ПеремещенияИПриходники.СсылкаПеремещение КАК СсылкаПеремещение,
	        |	ПеремещенияИПриходники.СсылкаПриход КАК СсылкаПриход,
	        |	РасходникиИПриходники.СсылкаРасход КАК СсылкаРасход,
	        |	РасходникиИПриходники.СсылкаРасход.Номер КАК Номер,
	        |	РасходникиИПриходники.СсылкаРасход.Дата КАК Дата,
	        |	ПеремещенияИПриходники.СсылкаПеремещение.СкладОтправитель КАК СкладОтправитель,
	        |	ПеремещенияИПриходники.СсылкаПеремещение.ВидЦены КАК ВидЦены,
	        |	ПеремещенияИПриходники.СсылкаПеремещение.Организация КАК Организация,
	        |	ПеремещенияИПриходники.СсылкаПеремещение.Ответственный КАК Ответственный
	        |ИЗ
	        |	ПеремещенияИПриходники КАК ПеремещенияИПриходники
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РасходникиИПриходники КАК РасходникиИПриходники
	        |		ПО ПеремещенияИПриходники.СсылкаПеремещение = РасходникиИПриходники.СсылкаПеремещение1
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	РасходникиИПриходники.СсылкаРасход.Дата";

	// для справки
	//|	И ПеремещениеТоваров.Дата МЕЖДУ &ДатаОт И &ДатаДо
	//|	И ПеремещениеТоваров.СкладПолучатель В(&Склад)
	//|	И ПеремещениеТоваров.Организация В(&Организация)
	
	Текст = ?(НЕ ЗначениеЗаполнено(Объект.Период), СтрЗаменить(Текст, "И ПеремещениеТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания", ""), Текст);
	Текст = ?(НЕ ЗначениеЗаполнено(Объект.Склад), СтрЗаменить(Текст, "И ПеремещениеТоваров.СкладПолучатель В(&Склад)", ""), Текст); 
	Текст = ?(НЕ ЗначениеЗаполнено(Объект.Организация), СтрЗаменить(Текст, "И ПеремещениеТоваров.Организация В(&Организация)", ""), Текст);
	
	//Если НЕ ЗначениеЗаполнено(Объект.Период) Тогда
	//
	//	Текст = СтрЗаменить(Текст, "", "");	
	//
	//КонецЕсли;
	//
	//Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
	//
	//	Текст = СтрЗаменить(Текст, "", "");	
	//
	//КонецЕсли;
	//
	//Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
	//
	//	Текст = СтрЗаменить(Текст, "", "");	
	//
	//КонецЕсли; 
	
	Запрос.Текст = Текст;       
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// для теста
	Тест = Результат.Выгрузить();
	
	// заполняем расходники 
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.СсылкаПриход)
			И ЗначениеЗаполнено(Выборка.СсылкаРасход) Тогда
			
			СтрТЧ = Объект.РасходныеОрдера.Добавить();
			СтрТЧ.Номер = Выборка.Номер;
			СтрТЧ.Дата = Выборка.Дата;
			СтрТЧ.расходныйОрдер = Выборка.СсылкаРасход;
			СтрТЧ.СкладОтправитель = Выборка.СкладОтправитель;
			СтрТЧ.ВидЦены = Выборка.ВидЦены;
			СтрТЧ.Организация = Выборка.организация;
			СтрТЧ.Ответственный = Выборка.Ответственный;
			СтрТЧ.ПеремещениеТоваров = Выборка.СсылкаПеремещение;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ПерезаполнитьРасходныеОрдера();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент = Неопределено)
	ПерезаполнитьРасходныеОрдера();
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент = Неопределено)
	ПерезаполнитьРасходныеОрдера();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборОрганизаций", ЭтаФорма);
	Форма = ОткрытьФорму("ВнешняяОбработка.РабочееМестоКладовщикаОбновленное.Форма.ФормаВыбораОрганизаций",,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры 

&НаКлиенте
Процедура ОбработатьВыборОрганизаций(Выбор, ДопП) Экспорт
	
	Объект.Организация.ЗагрузитьЗначения(Выбор);
	ОрганизацияПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборСкладов", ЭтаФорма);
	Форма = ОткрытьФорму("ВнешняяОбработка.РабочееМестоКладовщикаОбновленное.Форма.ФормаВыбораСкладов",,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборСкладов(Выбор, ДопП) Экспорт
	
	Объект.Склад.ЗагрузитьЗначения(Выбор);
	СкладПриИзменении();
	
КонецПроцедуры


&НаКлиенте
Процедура РасходныеОрдераВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	СтандартнаяОбработка = Ложь;
	// открываем форму и передаем данные выбранной строки 
	ПараметрыСтрокиТабличнойЧасти = ПолучитьПараметрыСтрокиТабличнойЧасти(ЭтаФорма.Элементы.РасходныеОрдера.Имя, Элемент.ТекущиеДанные.НомерСтроки);
	// дополняем структуру
	ПараметрыСтрокиТабличнойЧасти.Вставить("Склад", Объект.Склад);
	ПараметрыСтрокиТабличнойЧасти.Вставить("Ориганизация", Объект.Организация);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповеститьОЗавершенииПриемаТовара", ЭтаФорма);
	Форма = ОткрытьФорму("ВнешняяОбработка.РабочееМестоКладовщикаОбновленное.Форма.ФормаПриемаНоменклатуры",
	ПараметрыСтрокиТабличнойЧасти,
	,
	,
	,
	,
	ОписаниеОповещения,
	РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииПриемаТовара(Результат, ДопП) Экспорт
		
    Если Результат = Неопределено Тогда
	
		Сообщить("Отмена операции...");
		Возврат;
	
	КонецЕсли;
	
	Если Результат Тогда
		ПерезаполнитьРасходныеОрдера();			
	Иначе
		Сообщить("Возникла непредвиденная ошибка!");	
		Возврат;
	КонецЕсли;

КонецПроцедуры


&НаСервере
Функция ПолучитьПараметрыСтрокиТабличнойЧасти(ИмяТабличнойЧасти, НомерСтроки)
	
	ПараметрыСтрокиТабличнойЧасти = Новый Структура;
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить(Объект[ИмяТабличнойЧасти][НомерСтроки - 1]);
	СтрТЗ = Объект[ИмяТабличнойЧасти].Выгрузить(МассивКолонок);
	Для каждого Колонка Из СтрТЗ.Колонки Цикл
		
		//Сообщить("test");
		ПараметрыСтрокиТабличнойЧасти.Вставить(Колонка.Имя, СтрТЗ[0][Колонка.Имя]); 	
	
	КонецЦикла; 
	
	Возврат ПараметрыСтрокиТабличнойЧасти;

КонецФункции // ()


&НаСервере
Процедура ПриОткрытииНаСервере()
	// заполнение расходников  
	ПерезаполнитьРасходныеОрдера();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПерезаполнитьТаблицуНаСервере()
	ПерезаполнитьРасходныеОрдера();	
КонецПроцедуры


&НаКлиенте
Процедура ПерезаполнитьТаблицу(Команда)
	ПерезаполнитьТаблицуНаСервере();
КонецПроцедуры

