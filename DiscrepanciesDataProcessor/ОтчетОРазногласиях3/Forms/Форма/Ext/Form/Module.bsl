&НаСервере
Процедура НайтиРазногласияНаСервере()
	Объект.ОтчетОРазногласиях.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Объект.Период.ДатаОкончания); 
	Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
	Запрос.УстановитьПараметр("Получатель", Объект.Получатель);
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
|		        	ПеремещениеТоваров.Ссылка КАК СсылкаПеремещение,
|		        	ПеремещениеТоваров.Дата КАК Дата,
|		        	ПеремещениеТоваров.ЗаказНаПеремещение КАК ЗаказНаПеремещение
|		        ПОМЕСТИТЬ Перемещения
|		        ИЗ
|		        	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
|		        ГДЕ
|		        	ПеремещениеТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода
|					Alternative
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	Перемещения.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	Перемещения.Дата КАК Дата,
|		        	ПриходныйОрдерНаТовары.Ссылка КАК СсылкаПриход
|		        ПОМЕСТИТЬ ПриходникиРаспПеремещение
|		        ИЗ
|		        	Перемещения КАК Перемещения
|		        		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
|		        		ПО Перемещения.СсылкаПеремещение.Ссылка = ПриходныйОрдерНаТовары.Распоряжение.Ссылка
|		        ГДЕ
|		        	НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
|		        	
|		        ОБЪЕДИНИТЬ ВСЕ
|		        
|		        ВЫБРАТЬ
|		        	Перемещения.СсылкаПеремещение,
|		        	Перемещения.Дата,
|		        	ПриходныйОрдерНаТовары.Ссылка
|		        ИЗ
|		        	Перемещения КАК Перемещения
|		        		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
|		        		ПО Перемещения.ЗаказНаПеремещение.Ссылка = ПриходныйОрдерНаТовары.Распоряжение.Ссылка
|		        ГДЕ
|		        	НЕ ПриходныйОрдерНаТовары.ПометкаУдаления
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
|		        	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение
|		        ПОМЕСТИТЬ РасходникиСРаспоряжениями
|		        ИЗ
|		        	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
|		        		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
|		        		ПО РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка = РасходныйОрдерНаТовары.Ссылка
|		        ГДЕ
|		        	НЕ РасходныйОрдерНаТовары.ПометкаУдаления
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	РасходникиСРаспоряжениями.Ссылка КАК Ссылка,
|		        	РасходникиСРаспоряжениями.Распоряжение КАК Распоряжение
|		        ПОМЕСТИТЬ РасходникиРаспЗаказы
|		        ИЗ
|		        	РасходникиСРаспоряжениями КАК РасходникиСРаспоряжениями
|		        ГДЕ
|		        	ТИПЗНАЧЕНИЯ(РасходникиСРаспоряжениями.Распоряжение) = ТИП(Документ.ЗаказНаПеремещение)
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	РасходникиСРаспоряжениями.Ссылка КАК Ссылка,
|		        	РасходникиСРаспоряжениями.Распоряжение КАК Распоряжение
|		        ПОМЕСТИТЬ РасходникиРаспПерем
|		        ИЗ
|		        	РасходникиСРаспоряжениями КАК РасходникиСРаспоряжениями
|		        ГДЕ
|		        	ТИПЗНАЧЕНИЯ(РасходникиСРаспоряжениями.Распоряжение) = ТИП(Документ.ПеремещениеТоваров)
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	Перемещения.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	РасходникиРаспЗаказы.Ссылка КАК СсылкаРасход
|		        ПОМЕСТИТЬ РасходникиРаспЗаказыПеределанные
|		        ИЗ
|		        	Перемещения КАК Перемещения
|		        		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходникиРаспЗаказы КАК РасходникиРаспЗаказы
|		        		ПО Перемещения.ЗаказНаПеремещение.Ссылка = РасходникиРаспЗаказы.Распоряжение.Ссылка
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	РасходникиРаспЗаказыПеределанные.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	РасходникиРаспЗаказыПеределанные.СсылкаРасход КАК СсылкаРасход
|		        ПОМЕСТИТЬ РасходникиРаспПеремещение
|		        ИЗ
|		        	РасходникиРаспЗаказыПеределанные КАК РасходникиРаспЗаказыПеределанные
|		        
|		        ОБЪЕДИНИТЬ
|		        
|		        ВЫБРАТЬ
|		        	РасходникиРаспПерем.Распоряжение,
|		        	РасходникиРаспПерем.Ссылка
|		        ИЗ
|		        	РасходникиРаспПерем КАК РасходникиРаспПерем
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	РасходникиРаспПеремещение.СсылкаРасход КАК СсылкаРасход,
|		        	ПриходникиРаспПеремещение.СсылкаПриход КАК СсылкаПриход,
|		        	ПриходникиРаспПеремещение.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	РасходникиРаспПеремещение.СсылкаПеремещение КАК СсылкаПеремещение1
|		        ПОМЕСТИТЬ РасходникиИПриходники
|		        ИЗ
|		        	РасходникиРаспПеремещение КАК РасходникиРаспПеремещение
|		        		ПОЛНОЕ СОЕДИНЕНИЕ ПриходникиРаспПеремещение КАК ПриходникиРаспПеремещение
|		        		ПО РасходникиРаспПеремещение.СсылкаПеремещение = ПриходникиРаспПеремещение.СсылкаПеремещение
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	Перемещения.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	Перемещения.Дата КАК Дата,
|		        	РасходникиИПриходники.СсылкаПриход КАК СсылкаПриход
|		        ПОМЕСТИТЬ ПеремещенияИПриходники
|		        ИЗ
|		        	Перемещения КАК Перемещения
|		        		ЛЕВОЕ СОЕДИНЕНИЕ РасходникиИПриходники КАК РасходникиИПриходники
|		        		ПО Перемещения.СсылкаПеремещение = РасходникиИПриходники.СсылкаПеремещение
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	ПеремещенияИПриходники.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ПеремещенияИПриходники.СсылкаПриход КАК СсылкаПриход,
|		        	ПеремещенияИПриходники.Дата КАК Дата,
|		        	РасходникиИПриходники.СсылкаРасход КАК СсылкаРасход
|		        ПОМЕСТИТЬ ПеремещенияРасходПриход
|		        ИЗ
|		        	ПеремещенияИПриходники КАК ПеремещенияИПриходники
|		        		ЛЕВОЕ СОЕДИНЕНИЕ РасходникиИПриходники КАК РасходникиИПриходники
|		        		ПО ПеремещенияИПриходники.СсылкаПеремещение = РасходникиИПриходники.СсылкаПеремещение1
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ
|		        	АктОРасхожденияхПослеПеремещения.Ссылка КАК Ссылка,
|		        	АктОРасхожденияхПослеПеремещенияТовары.ДокументОснование КАК ДокументОснование
|		        ПОМЕСТИТЬ АктыОРасхожденияхСПеремещениями
|		        ИЗ
|		        	Документ.АктОРасхожденияхПослеПеремещения.Товары КАК АктОРасхожденияхПослеПеремещенияТовары
|		        		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПеремещения КАК АктОРасхожденияхПослеПеремещения
|		        		ПО АктОРасхожденияхПослеПеремещенияТовары.Ссылка = АктОРасхожденияхПослеПеремещения.Ссылка
|		        ГДЕ
|		        	НЕ АктОРасхожденияхПослеПеремещения.ПометкаУдаления
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
|		        	ПеремещенияРасходПриход.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ПеремещенияРасходПриход.Дата КАК ПеремещениеДата,
|		        	ПеремещенияРасходПриход.СсылкаПриход КАК СсылкаПриход,
|		        	ПеремещенияРасходПриход.СсылкаРасход КАК СсылкаРасход,
|		        	АктыОРасхожденияхСПеремещениями.Ссылка КАК СсылкаРасхождение,
|		        	ПеремещенияРасходПриход.СсылкаПеремещение.СкладОтправитель КАК СсылкаПеремещениеСкладОтправитель,
|		        	ПеремещенияРасходПриход.СсылкаПеремещение.СкладПолучатель КАК СсылкаПеремещениеСкладПолучатель
|		        ПОМЕСТИТЬ ОсновныеДанные
|		        ИЗ
|		        	ПеремещенияРасходПриход КАК ПеремещенияРасходПриход
|		        		ЛЕВОЕ СОЕДИНЕНИЕ АктыОРасхожденияхСПеремещениями КАК АктыОРасхожденияхСПеремещениями
|		        		ПО ПеремещенияРасходПриход.СсылкаПеремещение = АктыОРасхожденияхСПеремещениями.ДокументОснование
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ОсновныеДанные.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ОсновныеДанные.СсылкаПриход КАК СсылкаПриход,
|		        	ОсновныеДанные.СсылкаРасход КАК СсылкаРасход,
|		        	ОсновныеДанные.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	ПриходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
|		        	ПриходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
|		        	СУММА(ПриходныйОрдерНаТоварыТовары.Количество) КАК Количество
|		        ПОМЕСТИТЬ ПриходТовары
|		        ИЗ
|		        	ОсновныеДанные КАК ОсновныеДанные
|		        		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТоварыТовары
|		        		ПО ОсновныеДанные.СсылкаПриход = ПриходныйОрдерНаТоварыТовары.Ссылка
|		        
|		        СГРУППИРОВАТЬ ПО
|		        	ОсновныеДанные.СсылкаПеремещение,
|		        	ОсновныеДанные.СсылкаПриход,
|		        	ОсновныеДанные.СсылкаРасход,
|		        	ОсновныеДанные.СсылкаРасхождение,
|		        	ПриходныйОрдерНаТоварыТовары.Номенклатура,
|		        	ПриходныйОрдерНаТоварыТовары.Характеристика
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ОсновныеДанные.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ОсновныеДанные.СсылкаПриход КАК СсылкаПриход,
|		        	ОсновныеДанные.СсылкаРасход КАК СсылкаРасход,
|		        	ОсновныеДанные.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура КАК Номенклатура,
|		        	РасходныйОрдерНаТоварыОтгружаемыеТовары.Характеристика КАК Характеристика,
|		        	СУММА(РасходныйОрдерНаТоварыОтгружаемыеТовары.Количество) КАК Количество
|		        ПОМЕСТИТЬ РасходТовары
|		        ИЗ
|		        	ОсновныеДанные КАК ОсновныеДанные
|		        		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыОтгружаемыеТовары
|		        		ПО ОсновныеДанные.СсылкаРасход = РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка
|		        
|		        СГРУППИРОВАТЬ ПО
|		        	ОсновныеДанные.СсылкаПеремещение,
|		        	ОсновныеДанные.СсылкаПриход,
|		        	ОсновныеДанные.СсылкаРасход,
|		        	ОсновныеДанные.СсылкаРасхождение,
|		        	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура,
|		        	РасходныйОрдерНаТоварыОтгружаемыеТовары.Характеристика
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ РАЗЛИЧНЫЕ
|		        	ОсновныеДанные.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ОсновныеДанные.ПеремещениеДата КАК ПеремещениеДата,
|		        	ОсновныеДанные.СсылкаПриход КАК СсылкаПриход,
|		        	ОсновныеДанные.СсылкаРасход КАК СсылкаРасход,
|		        	ОсновныеДанные.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	ОсновныеДанные.СсылкаПеремещениеСкладОтправитель КАК СсылкаПеремещениеСкладОтправитель,
|		        	ОсновныеДанные.СсылкаПеремещениеСкладПолучатель КАК СсылкаПеремещениеСкладПолучатель,
|		        	ПриходТовары.Номенклатура КАК Номенклатура,
|		        	ПриходТовары.Характеристика КАК Характеристика,
|		        	ПриходТовары.Количество КАК КоличествоПриход,
|		        	0 КАК КоличествоРасход
|		        ПОМЕСТИТЬ ОбъединенныеТовары
|		        ИЗ
|		        	ОсновныеДанные КАК ОсновныеДанные
|		        		ЛЕВОЕ СОЕДИНЕНИЕ ПриходТовары КАК ПриходТовары
|		        		ПО ОсновныеДанные.СсылкаПриход = ПриходТовары.СсылкаПриход
|		        
|		        ОБЪЕДИНИТЬ ВСЕ
|		        
|		        ВЫБРАТЬ РАЗЛИЧНЫЕ
|		        	ОсновныеДанные.СсылкаПеремещение,
|		        	ОсновныеДанные.ПеремещениеДата,
|		        	ОсновныеДанные.СсылкаПриход,
|		        	ОсновныеДанные.СсылкаРасход,
|		        	ОсновныеДанные.СсылкаРасхождение,
|		        	ОсновныеДанные.СсылкаПеремещениеСкладОтправитель,
|		        	ОсновныеДанные.СсылкаПеремещениеСкладПолучатель,
|		        	РасходТовары.Номенклатура,
|		        	РасходТовары.Характеристика,
|		        	0,
|		        	РасходТовары.Количество
|		        ИЗ
|		        	ОсновныеДанные КАК ОсновныеДанные
|		        		ЛЕВОЕ СОЕДИНЕНИЕ РасходТовары КАК РасходТовары
|		        		ПО ОсновныеДанные.СсылкаРасход = РасходТовары.СсылкаРасход
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ОбъединенныеТовары.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ОбъединенныеТовары.ПеремещениеДата КАК ПеремещениеДата,
|		        	ОбъединенныеТовары.СсылкаПриход КАК СсылкаПриход,
|		        	ОбъединенныеТовары.СсылкаРасход КАК СсылкаРасход,
|		        	ОбъединенныеТовары.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	ОбъединенныеТовары.Номенклатура КАК Номенклатура,
|		        	ОбъединенныеТовары.Характеристика КАК Характеристика,
|		        	СУММА(ОбъединенныеТовары.КоличествоПриход) КАК КоличествоПриход,
|		        	СУММА(ОбъединенныеТовары.КоличествоРасход) КАК КоличествоРасход,
|		        	ОбъединенныеТовары.СсылкаПеремещениеСкладОтправитель КАК СсылкаПеремещениеСкладОтправитель,
|		        	ОбъединенныеТовары.СсылкаПеремещениеСкладПолучатель КАК СсылкаПеремещениеСкладПолучатель
|		        ПОМЕСТИТЬ СгруппированныеТовары
|		        ИЗ
|		        	ОбъединенныеТовары КАК ОбъединенныеТовары
|		        
|		        СГРУППИРОВАТЬ ПО
|		        	ОбъединенныеТовары.СсылкаПриход,
|		        	ОбъединенныеТовары.СсылкаРасход,
|		        	ОбъединенныеТовары.Номенклатура,
|		        	ОбъединенныеТовары.Характеристика,
|		        	ОбъединенныеТовары.СсылкаПеремещениеСкладОтправитель,
|		        	ОбъединенныеТовары.СсылкаПеремещениеСкладПолучатель,
|		        	ОбъединенныеТовары.СсылкаПеремещение,
|		        	ОбъединенныеТовары.ПеремещениеДата,
|		        	ОбъединенныеТовары.СсылкаРасхождение
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	СгруппированныеТовары.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	СгруппированныеТовары.Номенклатура КАК Номенклатура,
|		        	СгруппированныеТовары.Характеристика КАК Характеристика,
|		        	СгруппированныеТовары.ПеремещениеДата КАК ПеремещениеДата,
|		        	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦена,
|		        	СгруппированныеТовары.СсылкаПеремещениеСкладОтправитель.УчетныйВидЦены КАК ВидЦены
|		        ПОМЕСТИТЬ ВТ_ДанныеМДата
|		        ИЗ
|		        	СгруппированныеТовары КАК СгруппированныеТовары
|		        		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
|		        		ПО СгруппированныеТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
|		        			И СгруппированныеТовары.Характеристика = ЦеныНоменклатуры.Характеристика
|		        			И СгруппированныеТовары.ПеремещениеДата >= ЦеныНоменклатуры.Период
|		        			И СгруппированныеТовары.СсылкаПеремещениеСкладОтправитель.УчетныйВидЦены = ЦеныНоменклатуры.ВидЦены
|		        
|		        СГРУППИРОВАТЬ ПО
|		        	СгруппированныеТовары.СсылкаПеремещение,
|		        	СгруппированныеТовары.Номенклатура,
|		        	СгруппированныеТовары.Характеристика,
|		        	СгруппированныеТовары.ПеремещениеДата,
|		        	СгруппированныеТовары.СсылкаПеремещениеСкладОтправитель.УчетныйВидЦены
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ВТ_ДанныеМДата.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ВТ_ДанныеМДата.Номенклатура КАК Номенклатура,
|		        	ВТ_ДанныеМДата.Характеристика КАК Характеристика,
|		        	ВТ_ДанныеМДата.ПеремещениеДата КАК ПеремещениеДата,
|		        	ВТ_ДанныеМДата.ВидЦены КАК ВидЦены,
|		        	ЦеныНоменклатуры.Цена КАК Цена
|		        ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
|		        ИЗ
|		        	ВТ_ДанныеМДата КАК ВТ_ДанныеМДата
|		        		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
|		        		ПО ВТ_ДанныеМДата.Номенклатура = ЦеныНоменклатуры.Номенклатура
|		        			И ВТ_ДанныеМДата.Характеристика = ЦеныНоменклатуры.Характеристика
|		        			И ВТ_ДанныеМДата.ДатаЦена = ЦеныНоменклатуры.Период
|		        			И ВТ_ДанныеМДата.ВидЦены = ЦеныНоменклатуры.ВидЦены
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	СгруппированныеТовары.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	СгруппированныеТовары.ПеремещениеДата КАК ПеремещениеДата,
|		        	СгруппированныеТовары.СсылкаПриход КАК СсылкаПриход,
|		        	СгруппированныеТовары.СсылкаРасход КАК СсылкаРасход,
|		        	СгруппированныеТовары.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	СУММА(ВЫБОР
|		        			КОГДА СгруппированныеТовары.КоличествоПриход - СгруппированныеТовары.КоличествоРасход > 0
|		        				ТОГДА СгруппированныеТовары.КоличествоПриход - СгруппированныеТовары.КоличествоРасход
|		        			ИНАЧЕ 0
|		        		КОНЕЦ) КАК Излишки,
|		        	СУММА(ВЫБОР
|		        			КОГДА СгруппированныеТовары.КоличествоРасход - СгруппированныеТовары.КоличествоПриход > 0
|		        				ТОГДА СгруппированныеТовары.КоличествоРасход - СгруппированныеТовары.КоличествоПриход
|		        			ИНАЧЕ 0
|		        		КОНЕЦ) КАК Недостачи,
|		        	СгруппированныеТовары.СсылкаПеремещениеСкладОтправитель КАК СсылкаПеремещениеСкладОтправитель,
|		        	СгруппированныеТовары.СсылкаПеремещениеСкладПолучатель КАК СсылкаПеремещениеСкладПолучатель,
|		        	СУММА(СгруппированныеТовары.КоличествоПриход * ВТ_ЦеныНоменклатуры.Цена) - СУММА(СгруппированныеТовары.КоличествоРасход * ВТ_ЦеныНоменклатуры.Цена) КАК Разность,
|		        	СгруппированныеТовары.СсылкаПеремещение.ПометкаУдаления КАК ПеремещениеУдалено,
|		        	СгруппированныеТовары.СсылкаПриход.Проведен КАК ПриходПроведен,
|		        	СгруппированныеТовары.СсылкаРасход.Проведен КАК РасходПроведен,
|		        	ЛОЖЬ КАК Повтор
|		        ПОМЕСТИТЬ ВТ_ПолныйНаборДанных
|		        ИЗ
|		        	СгруппированныеТовары КАК СгруппированныеТовары
|		        		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
|		        		ПО СгруппированныеТовары.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
|		        			И СгруппированныеТовары.Характеристика = ВТ_ЦеныНоменклатуры.Характеристика
|		        			И СгруппированныеТовары.СсылкаПеремещение = ВТ_ЦеныНоменклатуры.СсылкаПеремещение
|		        			И СгруппированныеТовары.СсылкаПеремещениеСкладОтправитель.УчетныйВидЦены = ВТ_ЦеныНоменклатуры.ВидЦены
|		        
|		        СГРУППИРОВАТЬ ПО
|		        	СгруппированныеТовары.СсылкаПеремещение,
|		        	СгруппированныеТовары.ПеремещениеДата,
|		        	СгруппированныеТовары.СсылкаПриход,
|		        	СгруппированныеТовары.СсылкаРасход,
|		        	СгруппированныеТовары.СсылкаПеремещениеСкладОтправитель,
|		        	СгруппированныеТовары.СсылкаПеремещениеСкладПолучатель,
|		        	СгруппированныеТовары.СсылкаРасхождение,
|		        	СгруппированныеТовары.СсылкаПеремещение.ПометкаУдаления
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеДата КАК ПеремещениеДата,
|		        	ВТ_ПолныйНаборДанных.СсылкаПриход КАК СсылкаПриход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасход КАК СсылкаРасход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	ВТ_ПолныйНаборДанных.Излишки КАК Излишки,
|		        	ВТ_ПолныйНаборДанных.Недостачи КАК Недостачи,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладОтправитель КАК СсылкаПеремещениеСкладОтправитель,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладПолучатель КАК СсылкаПеремещениеСкладПолучатель,
|		        	ВТ_ПолныйНаборДанных.Разность КАК Разность,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеУдалено КАК ПеремещениеУдалено,
|		        	ВТ_ПолныйНаборДанных.ПриходПроведен КАК ПриходПроведен,
|		        	ВТ_ПолныйНаборДанных.РасходПроведен КАК РасходПроведен
|		        ПОМЕСТИТЬ ВТ_Набор
|		        ИЗ
|		        	ВТ_ПолныйНаборДанных КАК ВТ_ПолныйНаборДанных
|		        ГДЕ
|		        	(ВТ_ПолныйНаборДанных.Излишки <> 0
|		        			ИЛИ ВТ_ПолныйНаборДанных.Недостачи <> 0)
|		        
|		        ОБЪЕДИНИТЬ ВСЕ
|		        
|		        ВЫБРАТЬ
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещение,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеДата,
|		        	ВТ_ПолныйНаборДанных.СсылкаПриход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасхождение,
|		        	ВТ_ПолныйНаборДанных.Излишки,
|		        	ВТ_ПолныйНаборДанных.Недостачи,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладОтправитель,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладПолучатель,
|		        	ВТ_ПолныйНаборДанных.Разность,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеУдалено,
|		        	ВТ_ПолныйНаборДанных.ПриходПроведен,
|		        	ВТ_ПолныйНаборДанных.РасходПроведен
|		        ИЗ
|		        	ВТ_ПолныйНаборДанных КАК ВТ_ПолныйНаборДанных
|		        ГДЕ
|		        	ВТ_ПолныйНаборДанных.СсылкаПриход ЕСТЬ NULL
|		        	И ВТ_ПолныйНаборДанных.СсылкаРасход ЕСТЬ NULL
|		        	И ВТ_ПолныйНаборДанных.СсылкаПеремещение.Проведен
|		        	
|		        	ОБЪЕДИНИТЬ ВСЕ
|		        
|		        ВЫБРАТЬ
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещение,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеДата,
|		        	ВТ_ПолныйНаборДанных.СсылкаПриход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасхождение,
|		        	ВТ_ПолныйНаборДанных.Излишки,
|		        	ВТ_ПолныйНаборДанных.Недостачи,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладОтправитель,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладПолучатель,
|		        	ВТ_ПолныйНаборДанных.Разность,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеУдалено,
|		        	ВТ_ПолныйНаборДанных.ПриходПроведен,
|		        	ВТ_ПолныйНаборДанных.РасходПроведен
|		        ИЗ
|		        	ВТ_ПолныйНаборДанных КАК ВТ_ПолныйНаборДанных
|		        ГДЕ
|		        	НЕ ВТ_ПолныйНаборДанных.СсылкаПриход.Проведен
|		        	ИЛИ НЕ ВТ_ПолныйНаборДанных.СсылкаРасход.Проведен
|		        	И НЕ ВТ_ПолныйНаборДанных.СсылкаПеремещение.ПометкаУдаления 
|		        	
|		        	ОБЪЕДИНИТЬ ВСЕ
|		        
|		        ВЫБРАТЬ
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещение,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеДата,
|		        	ВТ_ПолныйНаборДанных.СсылкаПриход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасход,
|		        	ВТ_ПолныйНаборДанных.СсылкаРасхождение,
|		        	ВТ_ПолныйНаборДанных.Излишки,
|		        	ВТ_ПолныйНаборДанных.Недостачи,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладОтправитель,
|		        	ВТ_ПолныйНаборДанных.СсылкаПеремещениеСкладПолучатель,
|		        	ВТ_ПолныйНаборДанных.Разность,
|		        	ВТ_ПолныйНаборДанных.ПеремещениеУдалено,
|		        	ВТ_ПолныйНаборДанных.ПриходПроведен,
|		        	ВТ_ПолныйНаборДанных.РасходПроведен
|		        ИЗ
|		        	ВТ_ПолныйНаборДанных КАК ВТ_ПолныйНаборДанных
|		        	
|		        ГДЕ
|		        	ВТ_ПолныйНаборДанных.СсылкаПриход.Проведен
|		        	И ВТ_ПолныйНаборДанных.СсылкаРасход.Проведен
|		        	И НЕ ВТ_ПолныйНаборДанных.СсылкаПеремещение.Проведен
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ВТ_Набор.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	КОЛИЧЕСТВО(ВТ_Набор.СсылкаПеремещение) КАК КоличествоДублей
|		        ПОМЕСТИТЬ ВТ_Дубли
|		        ИЗ
|		        	ВТ_Набор КАК ВТ_Набор
|		        
|		        СГРУППИРОВАТЬ ПО
|		        	ВТ_Набор.СсылкаПеремещение
|		        
|		        ИМЕЮЩИЕ
|		        	КОЛИЧЕСТВО(ВТ_Набор.СсылкаПеремещение) > 1
|		        ;
|		        
|		        ////////////////////////////////////////////////////////////////////////////////
|		        ВЫБРАТЬ
|		        	ВТ_Набор.СсылкаПеремещение КАК СсылкаПеремещение,
|		        	ВТ_Набор.ПеремещениеДата КАК ПеремещениеДата,
|		        	ВТ_Набор.СсылкаПриход КАК СсылкаПриход,
|		        	ВТ_Набор.СсылкаРасход КАК СсылкаРасход,
|		        	ВТ_Набор.СсылкаРасхождение КАК СсылкаРасхождение,
|		        	ВТ_Набор.Излишки КАК Излишки,
|		        	ВТ_Набор.Недостачи КАК Недостачи,
|		        	ВТ_Набор.СсылкаПеремещениеСкладОтправитель КАК СсылкаПеремещениеСкладОтправитель,
|		        	ВТ_Набор.СсылкаПеремещениеСкладПолучатель КАК СсылкаПеремещениеСкладПолучатель,
|		        	ВТ_Набор.Разность КАК Разность,
|		        	ВТ_Набор.СсылкаПеремещение.Проведен КАК ПеремещениеПроведено,
|		        	ВТ_Набор.ПеремещениеУдалено КАК ПеремещениеУдалено,
|		        	ВТ_Набор.ПриходПроведен КАК ПриходПроведен,
|		        	ВТ_Набор.РасходПроведен КАК РасходПроведен,
|		        	ВЫБОР
|		        		КОГДА ВТ_Дубли.КоличествоДублей > 1
|		        			ТОГДА ИСТИНА
|		        		ИНАЧЕ ЛОЖЬ
|		        	КОНЕЦ КАК Повтор
|		        ИЗ
|		        	ВТ_Набор КАК ВТ_Набор
|		        		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Дубли КАК ВТ_Дубли
|		        		ПО ВТ_Набор.СсылкаПеремещение = ВТ_Дубли.СсылкаПеремещение
|	
|";


	
	//Все
	Если ЗначениеЗаполнено(Объект.Поставщик) И ЗначениеЗаполнено(Объект.Получатель) Тогда
		
		ТекстЗапроса = СтрЗаменить(Текст, "Alternative",
		"И ПеремещениеТоваров.СкладОтправитель = &Поставщик
		|	И ПеремещениеТоваров.СкладПолучатель = &Получатель");
		
		//+Поставщик -Получатель
	ИначеЕсли ЗначениеЗаполнено(Объект.Поставщик) И НЕ ЗначениеЗаполнено(Объект.Получатель) Тогда
		
		ТекстЗапроса = СтрЗаменить(Текст, "Alternative",
		"И ПеремещениеТоваров.СкладОтправитель = &Поставщик");
		
		//-Поставщик +Получатель	
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Поставщик) И ЗначениеЗаполнено(Объект.Получатель) Тогда  
		
		ТекстЗапроса = СтрЗаменить(Текст, "Alternative",
		"И ПеремещениеТоваров.СкладПолучатель = &Получатель");
		
		//Ничего	
	Иначе
		
		ТекстЗапроса = СтрЗаменить(Текст, "Alternative",
		"");
		
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрТЧ = Объект.ОтчетОРазногласиях.Добавить();
		СтрТЧ.РасходныйОрдер = Выборка.СсылкаРасход;
		СтрТЧ.ПриходныйОрдер = Выборка.СсылкаПриход; 
		СтрТЧ.Перемещение = Выборка.СсылкаПеремещение;
		СтрТЧ.АктОРасхождении = Выборка.СсылкаРасхождение;
		СтрТЧ.Поставщик = Выборка.СсылкаПеремещениеСкладОтправитель;
		СтрТЧ.Получатель = Выборка.СсылкаПеремещениеСкладПолучатель; 
		СтрТЧ.Недостача = Выборка.Недостачи;
		СтрТЧ.Излишки = Выборка.Излишки; 
		СтрТЧ.Разность = Выборка.Разность;
		СтрТЧ.Повтор = Выборка.Повтор;
		СтрТЧ.Дата = Выборка.ПеремещениеДата;
		СтрТЧ.ПеремещениеПроведено = Выборка.ПеремещениеПроведено;
		СтрТЧ.ПеремещениеУдалено = Выборка.ПеремещениеУдалено;
		СтрТЧ.ПриходПроведен = Выборка.ПриходПроведен;
		СтрТЧ.РасходПроведен = Выборка.РасходПроведен;
		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура НайтиРазногласия(Команда)	
	Если НЕ ЗначениеЗаполнено(Объект.Период) Тогда
		
		Сообщить("Заполните период.");
		Возврат;
		
	КонецЕсли; 
	НайтиРазногласияНаСервере();
КонецПроцедуры  

&НаСервере
Процедура ОбработатьТЗ(ТЗ)  // не используется
	
	//Объект.ОтчетОРазногласиях.Очистить();
	//
	//ДополненнаяТЗ = ДополнитьТЗ(ТЗ);
	//
	//// заполняет колонку Повтор в ТЧ, по которому работает УО
	//ТЗ_УО = ПодключитьУсловноеОформление(ДополненнаяТЗ);
	
	// 
	//
КонецПроцедуры

&НаСервере
Функция ДополнитьТЗ(ТЗ) // не используется
	
	//ТЗ.Колонки.Добавить("Недостачи", Новый ОписаниеТипов("Число"));
	//ТЗ.Колонки.Добавить("Излишки", Новый ОписаниеТипов("Число"));
	//
	//КвалификаторыЧисла = Новый КвалификаторыЧисла(10, 2, ДопустимыйЗнак.Любой);
	//ТЗ.Колонки.Добавить("Разность", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
	//
	//ТЗ.Колонки.Добавить("Повтор", Новый ОписаниеТипов("Булево"));
	//ТЗ.Колонки.Добавить("ПеремещениеУдалено", Новый ОписаниеТипов("Булево"));
	//
	//// сравниваем расходник и приходник
	//Для каждого СтрТЗ Из ТЗ Цикл
	//	
	//	Если ЗначениеЗаполнено(СтрТЗ.СсылкаРасход) И ЗначениеЗаполнено(СтрТЗ.СсылкаПриход) Тогда
	//		
	//		РасхОб = СтрТЗ.СсылкаРасход.ПолучитьОбъект();
	//		РасходникТовары = РасхОб.ОтгружаемыеТовары.Выгрузить();
	//		РасходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
	//		ПрихОб = СтрТЗ.СсылкаПриход.ПолучитьОбъект();
	//		ПриходникТовары = ПрихОб.Товары.Выгрузить();  
	//		ПриходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
	//		
	//		Результат = СравнитьНоменклатуруРасходПриход(РасходникТовары, ПриходникТовары);
	//		
	//		Если Результат <> Неопределено Тогда
	//			
	//			Для каждого СтрРезультат Из Результат Цикл
	//				
	//				ЦенаТовара = НайтиЦенуТовара(СтрТЗ.СсылкаПеремещение.СкладОтправитель, СтрРезультат.Номенклатура, СтрРезультат.Характеристика, СтрТЗ.СсылкаПеремещение.Дата);
	//				//Сообщить(СтрРезультат.Количество);
	//				Если СтрРезультат.Количество > 0 Тогда
	//				
	//					СтрТЗ.Недостачи = СтрТЗ.Недостачи + СтрРезультат.Количество;	
	//					СтрТЗ.Разность = СтрТЗ.Разность - (ЦенаТовара * СтрРезультат.Количество);
	//					
	//				КонецЕсли;  
	//				
	//				Если СтрРезультат.Количество < 0 Тогда
	//				
	//					СтрТЗ.Излишки = СтрТЗ.Излишки + -(СтрРезультат.Количество);
	//					СтрТЗ.Разность = СтрТЗ.Разность + (ЦенаТовара * -(СтрРезультат.Количество));
	//				
	//				КонецЕсли;
	//				
	//			КонецЦикла; 
	//			
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//	Если ЗначениеЗаполнено(СтрТЗ.СсылкаРасход) И НЕ ЗначениеЗаполнено(СтрТЗ.СсылкаПриход) Тогда
	//	
	//		РасхОб = СтрТЗ.СсылкаРасход.ПолучитьОбъект();
	//		//РасходникТовары = РасхОб.ОтгружаемыеТовары.Выгрузить();
	//		//РасходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
	//		
	//		Если ЗначениеЗаполнено(РасхОб.ВсегоМест) Тогда
	//			СтрТЗ.Недостачи = РасхОб.ВсегоМест;
	//			Для каждого СтрНом Из РасхОб.ОтгружаемыеТовары Цикл
	//			
	//				ЦенаТовара = НайтиЦенуТовара(СтрТЗ.СсылкаПеремещение.СкладОтправитель, СтрНом.Номенклатура, СтрНом.Характеристика, СтрТЗ.СсылкаПеремещение.Дата);		
	//				СтрТЗ.Разность = СтрТЗ.Разность - (ЦенаТовара * СтрНом.Количество);
	//				
	//			КонецЦикла; 	
	//		Иначе
	//			
	//			КоличествоТоваров = 0;
	//			Для каждого СтрНом Из РасхОб.ОтгружаемыеТовары Цикл
	//			
	//				КоличествоТоваров = КоличествоТоваров + СтрНом.Количество;
	//				ЦенаТовара = НайтиЦенуТовара(СтрТЗ.СсылкаПеремещение.СкладОтправитель, СтрНом.Номенклатура, СтрНом.Характеристика, СтрТЗ.СсылкаПеремещение.Дата);
	//				СтрТЗ.Разность = СтрТЗ.Разность - (ЦенаТовара * СтрНом.Количество);
	//			
	//			КонецЦикла; 
	//			СтрТЗ.Недостачи = КоличествоТоваров;
	//		
	//		КонецЕсли;
	//	
	//	КонецЕсли; 
	//	
	//	Если НЕ ЗначениеЗаполнено(СтрТЗ.СсылкаРасход) И ЗначениеЗаполнено(СтрТЗ.СсылкаПриход) Тогда
	//	
	//		ПрихОб = СтрТЗ.СсылкаПриход.ПолучитьОбъект();
	//		Если ЗначениеЗаполнено(ПрихОб.ВсегоМест) Тогда
	//			СтрТЗ.Излишки = ПрихОб.ВсегоМест;
	//			Для каждого СтрНом Из ПрихОб.Товары Цикл
	//			
	//				ЦенаТовара = НайтиЦенуТовара(СтрТЗ.СсылкаПеремещение.СкладОтправитель, СтрНом.Номенклатура, СтрНом.Характеристика, СтрТЗ.СсылкаПеремещение.Дата);		
	//				СтрТЗ.Разность = СтрТЗ.Разность + (ЦенаТовара * СтрНом.Количество);
	//				
	//			КонецЦикла;
	//		Иначе
	//			
	//			КоличествоТоваров = 0;
	//			Для каждого СтрНом Из ПрихОб.Товары Цикл
	//			
	//				КоличествоТоваров = КоличествоТоваров + СтрНом.Количество;
	//				ЦенаТовара = НайтиЦенуТовара(СтрТЗ.СсылкаПеремещение.СкладОтправитель, СтрНом.Номенклатура, СтрНом.Характеристика, СтрТЗ.СсылкаПеремещение.Дата);		
	//				СтрТЗ.Разность = СтрТЗ.Разность + (ЦенаТовара * СтрНом.Количество);
	//			
	//			КонецЦикла;
	//		    СтрТЗ.Излишки = КоличествоТоваров;
	//		КонецЕсли;
	//				
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//РезТЗ = ПодчиститьТЗ(ТЗ);
	//
	//Возврат РезТЗ;
	
КонецФункции // ()

&НаСервере
Функция НайтиЦенуТовара(Склад, Номенклатура, Характеристика, Дата) // не используется
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ВидЦены", Склад.УчетныйВидЦены);
	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//Запрос.УстановитьПараметр("Характеристика", ?(ЗначениеЗаполнено(Характеристика), Характеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));
	//Запрос.УстановитьПараметр("Дата", Дата);   
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	//               |ИЗ
	//               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата,) КАК ЦеныНоменклатурыСрезПоследних
	//               |ГДЕ
	//               |	ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены
	//               |	И ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
	//               |	И ЦеныНоменклатурыСрезПоследних.Характеристика = &Характеристика";
	//
	//Результат = Запрос.Выполнить().Выгрузить();
	//
	//Если Результат.Количество() > 0 Тогда
	//
	//	Возврат Результат[0].Цена;
	//	
	//Иначе
	//	
	//	Возврат 0;
	//
	//КонецЕсли;
	
КонецФункции // ()

&НаСервере
Функция ПодчиститьТЗ(ТЗ) // не используется
	
	////Сообщить(ТЗ); 
	//ОбновленнаяТЗ = ТЗ.Скопировать(); 
	//ОбновленнаяТЗ.Очистить();
	//
	//
	//Для каждого СтрТЗ Из ТЗ Цикл
	//
	//	Если НЕ (СтрТЗ.Недостачи = 0 И СтрТЗ.Излишки = 0)
	//		ИЛИ НЕ (ЗначениеЗаполнено(СтрТЗ.СсылкаПриход) И ЗначениеЗаполнено(СтрТЗ.СсылкаРасход)) 
	//		И НЕ (НЕ ЗначениеЗаполнено(СтрТЗ.СсылкаПриход) И НЕ ЗначениеЗаполнено(СтрТЗ.СсылкаРасход) 
	//		И СтрТЗ.СсылкаПеремещение.ПометкаУдаления) Тогда
	//	
	//		СтрТЗН = ОбновленнаяТЗ.Добавить();	
	//		СтрТЗН.СсылкаПеремещение = СтрТЗ.СсылкаПеремещение;
	//		СтрТЗН.СсылкаПриход = СтрТЗ.СсылкаПриход;
	//		СтрТЗН.СсылкаРасход = СтрТЗ.СсылкаРасход;
	//		СтрТЗН.СсылкаРасхождение = СтрТЗ.СсылкаРасхождение;
	//		СтрТЗН.СсылкаПеремещениеСкладОтправитель = СтрТЗ.СсылкаПеремещениеСкладОтправитель;
	//		СтрТЗН.СсылкаПеремещениеСкладПолучатель = СтрТЗ.СсылкаПеремещениеСкладПолучатель;
	//		СтрТЗН.Недостачи = СтрТЗ.Недостачи;
	//		СтрТЗН.Излишки = СтрТЗ.Излишки;
	//		СтрТЗН.Разность = СтрТЗ.Разность;
	//		СтрТЗН.ПеремещениеДата = СтрТЗ.ПеремещениеДата;
	//	
	//	КонецЕсли;
	//		
	//КонецЦикла; 
	//
	//ОбновленнаяТЗ = СгруппироватьОдинаковыеПриходникиРасходники(ОбновленнаяТЗ);
	//
	//Возврат ОбновленнаяТЗ;
	
КонецФункции // ()

&НаСервере
Функция СгруппироватьОдинаковыеПриходникиРасходники(ТЗ) // не используется
	
	//// проверяем на два одинаковых расходника/приходника в табличной части 
	//Для каждого СтрТЗ Из ТЗ Цикл
	//	
	//	ОтборПриход = Новый Структура;                         
	//	ОтборПриход.Вставить("СсылкаПеремещение", СтрТЗ.СсылкаПеремещение);
	//	ОтборПриход.Вставить("СсылкаПриход", СтрТЗ.СсылкаПриход);
	//	НайденныеСтрокиПриход = ТЗ.НайтиСтроки(ОтборПриход); 
	//	
	//	ОтборРасход = Новый Структура;
	//	ОтборРасход.Вставить("СсылкаПеремещение", СтрТЗ.СсылкаПеремещение);
	//	ОтборРасход.Вставить("СсылкаРасход", СтрТЗ.СсылкаРасход);
	//	НайденныеСтрокиРасход = ТЗ.НайтиСтроки(ОтборРасход);
	//	
	//	Если НайденныеСтрокиПриход.Количество() > 1 Тогда
	//	
	//		// проверяем заполнены ли поле расходника и приходника
	//		Для каждого СтрМ Из НайденныеСтрокиПриход Цикл
	//			
	//			Если ЗначениеЗаполнено(СтрМ.СсылкаПриход) И ЗначениеЗаполнено(СтрМ.СсылкаРасход) Тогда
	//			
	//										
	//			
	//			КонецЕсли;
	//			//Сообщить("test");		
	//		
	//		КонецЦикла;
	//		
	//	ИначеЕсли НайденныеСтрокиРасход.Количество() > 1 Тогда
	//		
	//		Для каждого СтрМ Из НайденныеСтрокиРасход Цикл
	//		
	//			Если ЗначениеЗаполнено(СтрМ.СсылкаПриход) И ЗначениеЗаполнено(СтрМ.СсылкаРасход) Тогда
	//			
	//				// если два одинаковых расходника, складываем количество товара в расходниках по номенклатуре и характеристике
	//				Для Счетчик = 1 По НайденныеСтрокиРасход.Количество() Цикл
	//				
	//						
	//				
	//				КонецЦикла;	
	//			
	//			КонецЕсли;	
	//		
	//		КонецЦикла;
	//		
	//	КонецЕсли;
	//
	//КонецЦикла;
	
	
	// сравниваем приходник с окончательным расходником
	// если номенклатура в расходнике и приходнике совпадают, то удаляем найденные строки
	// если номенклатура не совпадает оставляем, как есть  
	
	// если два одинаковых приходника, складываем количество товара в приходниках по номенклатуре и характеристике
	// сравниваем расходник с окончательным приходником
	// если номенклатура в расходнике и приходнике совпадают, то удаляем найденные строки
	// если номенклатура не совпадает оставляем, как есть
	
	Возврат ТЗ;
	
КонецФункции // ()

&НаСервере
Функция ПодключитьУсловноеОформление(ТЗ) // не используется
	
	//Для каждого СтрТЗ Из ТЗ Цикл
	//	
	//	ОдинаковыеСтроки = ТЗ.НайтиСтроки(Новый Структура("СсылкаПеремещение", СтрТЗ.СсылкаПеремещение));
	//	
	//	Если ОдинаковыеСтроки.Количество() > 1 Тогда
	//	
	//		Для каждого Строка Из ОдинаковыеСтроки Цикл
	//		
	//			Строка.Повтор = Истина;	
	//		
	//		КонецЦикла;	
	//	
	//	КонецЕсли;
	//	
	//	Если СтрТЗ.СсылкаПеремещение.ПометкаУдаления Тогда
	//	
	//		СтрТЗ.ПеремещениеУдалено = Истина;	
	//	
	//	КонецЕсли;
	//	
	//КонецЦикла;
	//
	//// // // // // // // // // // // // // // // // // // // // // //
	
	//Возврат ТЗ;
	
КонецФункции // ()

&НаСервере
Функция СравнитьНоменклатуруРасходПриход(РасходникТовары, ПриходникТовары) // не используется
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ТЗ1", РасходникТовары);
	//Запрос.УстановитьПараметр("ТЗ2", ПриходникТовары);
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ТЗ1.Номенклатура КАК Номенклатура,
	//               |	ТЗ1.Характеристика КАК Характеристика,
	//               |	ТЗ1.Количество КАК Количество
	//               |ПОМЕСТИТЬ врТЗ1
	//               |ИЗ
	//               |	&ТЗ1 КАК ТЗ1
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТЗ2.Номенклатура КАК Номенклатура,
	//               |	ТЗ2.Характеристика КАК Характеристика,
	//               |	ТЗ2.Количество КАК Количество
	//               |ПОМЕСТИТЬ врТЗ2
	//               |ИЗ
	//               |	&ТЗ2 КАК ТЗ2
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЕСТЬNULL(врТЗ1.Номенклатура, врТЗ2.Номенклатура) КАК Номенклатура,
	//               |	ЕСТЬNULL(врТЗ1.Характеристика, врТЗ2.Характеристика) КАК Характеристика,
	//               |	ЕСТЬNULL(врТЗ1.Количество, 0) КАК Кол1,
	//               |	ЕСТЬNULL(врТЗ2.Количество, 0) КАК Кол2
	//               |ПОМЕСТИТЬ втВР
	//               |ИЗ
	//               |	врТЗ1 КАК врТЗ1
	//               |		ПОЛНОЕ СОЕДИНЕНИЕ врТЗ2 КАК врТЗ2
	//               |		ПО врТЗ1.Номенклатура = врТЗ2.Номенклатура
	//               |			И врТЗ1.Характеристика = врТЗ2.Характеристика
	//               |			И врТЗ1.Количество = врТЗ2.Количество
	//               |ГДЕ
	//               |	(врТЗ1.Номенклатура ЕСТЬ NULL
	//               |			ИЛИ врТЗ2.Номенклатура ЕСТЬ NULL)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	втВР.Номенклатура КАК Номенклатура,
	//               |	втВР.Характеристика КАК Характеристика,
	//               |	СУММА(втВР.Кол1 - втВР.Кол2) КАК Количество
	//               |ИЗ
	//               |	втВР КАК втВР
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	втВР.Номенклатура,
	//               |	втВР.Характеристика";
	//Результат = Запрос.Выполнить().Выгрузить();
	//	
	//Если Результат.Количество() <> 0 Тогда
	//
	//Возврат Результат;	
	//
	//КонецЕсли;
	
КонецФункции // ()

// тестирование
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// заполняем период
	//Объект.Период.ДатаНачала = ТекущаяДата() - 60 * 60 * 24 * 365;
	//Объект.Период.ДатаОкончания = ТекущаяДата(); 	
КонецПроцедуры                                      

&НаКлиенте
Процедура СортироватьТабЧасть(Команда)
	ИмяКолонки = СтрЗаменить(Элементы.ОтчетОРазногласиях1.ТекущийЭлемент.Имя, "ОтчетОРазногласиях1", "");
	Объект.ОтчетОРазногласиях.Сортировать(ИмяКолонки + " " + Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОРазногласиях1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  
	
	СтандартнаяОбработка = Ложь;
	Данные = Новый Структура;
	Склады = Новый Массив;
	Склады.Добавить(Элемент.ТекущиеДанные.Получатель);
	Склады.Добавить(Элемент.ТекущиеДанные.Поставщик);
	Данные.Вставить("Расходник", Элемент.ТекущиеДанные.РасходныйОрдер);
	Данные.Вставить("Приходник", Элемент.ТекущиеДанные.ПриходныйОрдер);
	Данные.Вставить("Расхождение", Элемент.ТекущиеДанные.АктОРасхождении);
	Данные.Вставить("Перемещение", Элемент.ТекущиеДанные.Перемещение);  
	Данные.Вставить("Склады", Склады);
	Данные.Вставить("Поставщик", Элемент.ТекущиеДанные.Поставщик);
	Данные.Вставить("ДатаНачала", Объект.Период.ДатаНачала);
	Данные.Вставить("ДатаОкончания", Объект.Период.ДатаОкончания);
	ОткрытьФорму("ВнешняяОбработка.ОтчетОРазногласиях.Форма.ФормаСРасхождениями",Данные,,Истина,,,,РежимОткрытияОкнаФормы.Независимый);
	
	ОчиститьСообщения();
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеВыделенныеНаСервере(ПеремещениеСсылка)
	
	ДокОбП = ПеремещениеСсылка.ПолучитьОбъект();
	
	Попытка
		
		ДокОбП.УстановитьПометкуУдаления(Истина);	
		
	Исключение
		
		Возврат;
		
	КонецПопытки;	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеВыделенные(Команда)
	Для каждого Индекс Из Элементы.ОтчетОРазногласиях1.ВыделенныеСтроки Цикл 
		ТекСтр = Элементы.ОтчетОРазногласиях1.ДанныеСтроки(Индекс);
		ПометитьНаУдалениеВыделенныеНаСервере(ТекСтр.Перемещение);
	КонецЦикла;
	// обновляем таблицу
	
	НайтиРазногласияНаСервере();
КонецПроцедуры

&НаСервере
Функция ПоказатьДок()
	
	ТабДок = Новый ТабличныйДокумент;
	Обработка = РеквизитФормыВЗначение("Объект");
	Макет = Обработка.ПолучитьМакет("Разногласия");
	облШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(облШапка); 
	облФильтры = Макет.ПолучитьОбласть("Фильтры");
	облФильтры.Параметры.Период = Объект.Период;
	облФильтры.Параметры.Поставщик = Объект.Поставщик;
	облФильтры.Параметры.Получатель = Объект.Получатель;
	ТабДок.Вывести(облФильтры); 
	облСтрПустая = Макет.ПолучитьОбласть("СтрПустая");
	Для Счетчик = 0 По 1 Цикл
		ТабДок.Вывести(облСтрПустая);
	КонецЦикла;
	облСтолбцы = Макет.ПолучитьОбласть("Столбцы");
	ТабДок.Вывести(облСтолбцы); 
	облСтрТЧ = Макет.ПолучитьОбласть("СтрТЧ");
	Для каждого СтрТЧ Из Объект.ОтчетОРазногласиях Цикл
		
		облСтрТЧ.Параметры.Дата = СтрТЧ.Дата;
		облСтрТЧ.Параметры.Перемещение = СтрТЧ.Перемещение;
		облСтрТЧ.Параметры.РасходныйОрдер = СтрТЧ.РасходныйОрдер;
		облСтрТЧ.Параметры.ПриходныйОрдер = СтрТЧ.ПриходныйОрдер;
		облСтрТЧ.Параметры.АктОРасхождении = СтрТЧ.АктОРасхождении;
		облСтрТЧ.Параметры.Поставщик = СтрТЧ.Поставщик;
		облСтрТЧ.Параметры.Получатель = СтрТЧ.Получатель;
		облСтрТЧ.Параметры.Недостача = СтрТЧ.Недостача;
		облСтрТЧ.Параметры.Излишки = СтрТЧ.Излишки;
		облСТрТЧ.Параметры.Разность = СтрТЧ.Разность;
		ТабДок.Вывести(облСтрТЧ);
		
	КонецЦикла;
	Возврат ТабДок;
	//ТабДок.Показать("Разногласия | " + Строка(Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy")));	
	
КонецФункции

&НаКлиенте
Процедура ЭкспортВExcel(Команда)
	ТабДок = ПоказатьДок();
	ТабДок.Показать("Разногласия | " + Строка(Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy")));
КонецПроцедуры

&НаСервере
Процедура ПровестиВыделенныеНаСервере(Ссылка)
	ДокОбП = Ссылка.ПолучитьОбъект();
	
	Если ДокОбП.ПометкаУдаления Тогда
	
		Сообщить("Документ " + Строка(ДокОбП) + " помечен на удаление, проведение невозможно!");	
		Возврат;
		
	КонецЕсли;
	
	Попытка
		
		ДокОбП.Записать(РежимЗаписиДокумента.Проведение);	
		Сообщить("Документ " + Строка(ДокОбП) + " успешно проведен!");
		
	Исключение
		
		Сообщить("Документ " + Строка(ДокОбП) + " не удалось провести.");
		Возврат;
		
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПровестиВыделенные(Команда)
	
	СчетчикИзменений = Ложь;
	Для каждого Индекс Из Элементы.ОтчетОРазногласиях1.ВыделенныеСтроки Цикл
		ТекСтр = Элементы.ОтчетОРазногласиях1.ДанныеСтроки(Индекс);
		Если ЗначениеЗаполнено(ТекСтр.Перемещение) И НЕ ТекСтр.ПеремещениеПроведено И НЕ ТекСтр.ПеремещениеУдалено Тогда
			ПровестиВыделенныеНаСервере(ТекСтр.Перемещение);
			СчетчикИзменений = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекСтр.ПриходныйОрдер) И НЕ ТекСтр.ПриходПроведен Тогда
			ПровестиВыделенныеНаСервере(ТекСтр.ПриходныйОрдер);
			СчетчикИзменений = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекСтр.РасходныйОрдер) И НЕ ТекСтр.РасходПроведен Тогда
			ПровестиВыделенныеНаСервере(ТекСтр.РасходныйОрдер);
			СчетчикИзменений = Истина;
		КонецЕсли;	
	КонецЦикла; 
	// обновляем таблицу
	Если СчетчикИзменений Тогда
		НайтиРазногласияНаСервере();	
	КонецЕсли;
	
КонецПроцедуры 

// при двойном клике на строку с расхождениями открывается форма со строками, где есть расхождения (выполнено)
// осталось сделать сравнение движений одной номенклатуры по двум разным складам в один период     

