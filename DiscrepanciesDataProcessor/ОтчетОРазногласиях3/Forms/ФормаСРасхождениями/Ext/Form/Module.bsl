
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Сообщить(СтандартнаяОбработка);   
	Объект.ПеремещениеФСР = ЭтаФорма.Параметры.Перемещение;
	Объект.РасходникФСР = ЭтаФорма.Параметры.Расходник;
	Объект.ПриходникФСР = ЭтаФорма.Параметры.Приходник;    
	Объект.АктОРасхожденииФСР = ЭтаФорма.Параметры.Расхождение;
	//Объект.ПолучательФСР = ЭтаФорма.Параметры.Получатель;
	//Объект.ПоставщикФСР = ЭтаФорма.Параметры.Поставщик;
	Период.ДатаНачала =	ЭтаФорма.Параметры.ДатаНачала; 
	Период.ДатаОкончания = ТекущаяДата();  
	СписокСкладов.ЗагрузитьЗначения(ЭтаФорма.Параметры.Склады);	
	ЗаполнитьТЧ();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧ()
	// обработка исключений, когда нет документов прихода или расхода 
	Если ЗначениеЗаполнено(Объект.РасходникФСР) И ЗначениеЗаполнено(Объект.ПриходникФСР) Тогда
	
		РасхОб = Объект.РасходникФСР.ПолучитьОбъект();
		РасходникТовары = РасхОб.ОтгружаемыеТовары.Выгрузить();
		РасходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
		ПрихОб = Объект.ПриходникФСР.ПолучитьОбъект();
		ПриходникТовары = ПрихОб.Товары.Выгрузить();  
		ПриходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
		
		Результат = СравнитьНоменклатуруРасходПриход(РасходникТовары, ПриходникТовары);
		
		Если Результат = Неопределено Тогда
			
			Возврат;	
			
		КонецЕсли;
		
		// заполняем ТЧ
		Для каждого СтрТЗ Из Результат Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", СтрТЗ.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрТЗ.Характеристика);
			
			Если Объект.РазногласияФСР.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
				Продолжить;	
			КонецЕсли;
			СтрТЧ = Объект.РазногласияФСР.Добавить();
			СтрТЧ.Движения = Истина;
			СтрТЧ.Артикул = СтрТЗ.Артикул;
			СтрТЧ.Штрихкод = СтрТЗ.Штрихкод;
			СтрТЧ.Номенклатура = СтрТЗ.Номенклатура;
			СтрТЧ.Характеристика = СтрТЗ.Характеристика;
			Если СтрТЗ.Количество > 0 Тогда
				
				СтрТЧ.Недостачи = СтрТЗ.Количество;
				
			Иначе
				
				СтрТЧ.Излишки = -СтрТЗ.Количество;
			
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.РасходникФСР) И ЗначениеЗаполнено(Объект.ПриходникФСР) Тогда 
		
		ПрихОб = Объект.ПриходникФСР.ПолучитьОбъект();
		ПриходникТовары = ПрихОб.Товары.Выгрузить();  
		ПриходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
		
		Для каждого СтрТЗ Из ПриходникТовары Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", СтрТЗ.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрТЗ.Характеристика);
			
			Если Объект.РазногласияФСР.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
				Продолжить;	
			КонецЕсли;
		
			СтрТЧ = Объект.РазногласияФСР.Добавить();
			СтрТЧ.Движения = Истина;
			СтрТЧ.Артикул = СтрТЗ.Номенклатура.Артикул;
			СтрТЧ.Штрихкод = ПолучитьШтрихкодНоменклатуры(СтрТЗ.Номенклатура, СтрТЗ.Характеристика);
			СтрТЧ.Номенклатура = СтрТЗ.Номенклатура;
			СтрТЧ.Характеристика = СтрТЗ.Характеристика;
			СтрТЧ.Излишки = СтрТЗ.Количество;
		
		КонецЦикла;
		
	ИначеЕсли ЗначениеЗаполнено(Объект.РасходникФСР) И НЕ ЗначениеЗаполнено(Объект.ПриходникФСР) Тогда
		
		РасхОб = Объект.РасходникФСР.ПолучитьОбъект();
		РасходникТовары = РасхОб.ОтгружаемыеТовары.Выгрузить();
		РасходникТовары.Сортировать("Номенклатура,Характеристика ВОЗР");
		
		Для каждого СтрТЗ Из РасходникТовары Цикл   
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура", СтрТЗ.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрТЗ.Характеристика);
			
			Если Объект.РазногласияФСР.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
				Продолжить;	
			КонецЕсли;
		
			СтрТЧ = Объект.РазногласияФСР.Добавить();
			СтрТЧ.Движения = Истина;
			СтрТЧ.Артикул = СтрТЗ.Номенклатура.Артикул;
			СтрТЧ.Штрихкод = ПолучитьШтрихкодНоменклатуры(СтрТЗ.Номенклатура, СтрТЗ.Характеристика);
			СтрТЧ.Номенклатура = СтрТЗ.Номенклатура;
			СтрТЧ.Характеристика = СтрТЗ.Характеристика;
			СтрТЧ.Недостачи = -СтрТЗ.Количество;
		
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры  

&НаСервере
Функция ПолучитьШтрихкодНоменклатуры(Номенклатура, Характеристика)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика); 
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	               |	И ШтрихкодыНоменклатуры.Характеристика = &Характеристика";
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() = 1 Тогда
	
		Возврат Результат[0].Штрихкод;	
		
	Иначе
		
		Возврат Неопределено;
	
	КонецЕсли;

КонецФункции // ()


&НаСервере
Функция СравнитьНоменклатуруРасходПриход(РасходникТовары, ПриходникТовары)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ1", РасходникТовары);
	Запрос.УстановитьПараметр("ТЗ2", ПриходникТовары);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТЗ1.Номенклатура КАК Номенклатура,
	               |	ТЗ1.Характеристика КАК Характеристика,
	               |	ТЗ1.Количество КАК Количество
	               |ПОМЕСТИТЬ врТЗ1
	               |ИЗ
	               |	&ТЗ1 КАК ТЗ1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТЗ2.Номенклатура КАК Номенклатура,
	               |	ТЗ2.Характеристика КАК Характеристика,
	               |	ТЗ2.Количество КАК Количество
	               |ПОМЕСТИТЬ врТЗ2
	               |ИЗ
	               |	&ТЗ2 КАК ТЗ2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЕСТЬNULL(врТЗ1.Номенклатура, врТЗ2.Номенклатура) КАК Номенклатура,
	               |	ЕСТЬNULL(врТЗ1.Характеристика, врТЗ2.Характеристика) КАК Характеристика,
	               |	ЕСТЬNULL(врТЗ1.Количество, 0) КАК Кол1,
	               |	ЕСТЬNULL(врТЗ2.Количество, 0) КАК Кол2
	               |ПОМЕСТИТЬ втВР
	               |ИЗ
	               |	врТЗ1 КАК врТЗ1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ врТЗ2 КАК врТЗ2
	               |		ПО врТЗ1.Номенклатура = врТЗ2.Номенклатура
	               |			И врТЗ1.Характеристика = врТЗ2.Характеристика
	               |			И врТЗ1.Количество = врТЗ2.Количество
	               |ГДЕ
	               |	(врТЗ1.Номенклатура ЕСТЬ NULL
	               |			ИЛИ врТЗ2.Номенклатура ЕСТЬ NULL)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	втВР.Номенклатура КАК Номенклатура,
	               |	втВР.Характеристика КАК Характеристика,
	               |	СУММА(втВР.Кол1 - втВР.Кол2) КАК Количество
	               |ПОМЕСТИТЬ ОсновнаяИнформация
	               |ИЗ
	               |	втВР КАК втВР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втВР.Номенклатура,
	               |	втВР.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОсновнаяИнформация.Номенклатура КАК Номенклатура,
	               |	ОсновнаяИнформация.Характеристика КАК Характеристика,
	               |	ОсновнаяИнформация.Количество КАК Количество,
	               |	НоменклатураСправочник.Артикул КАК Артикул,
	               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	ОсновнаяИнформация КАК ОсновнаяИнформация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	               |		ПО ОсновнаяИнформация.Номенклатура = НоменклатураСправочник.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |		ПО ОсновнаяИнформация.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	               |			И ОсновнаяИнформация.Характеристика = ШтрихкодыНоменклатуры.Характеристика";
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
	
		Возврат Результат;
		
	Иначе
		
		Возврат Неопределено;
	
	КонецЕсли;

КонецФункции // ()

&НаКлиенте
Процедура РазногласияФСРПриАктивизацииСтроки(Элемент)
	Если Объект.РазногласияФСР.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	НоменклатураФСР = Элемент.ТекущиеДанные.Номенклатура;
	ХарактеристикаФСР = Элемент.ТекущиеДанные.Характеристика; 
КонецПроцедуры

&НаСервере
Процедура ПоказатьДвижениеНаСервере(ВсяРазличающаясяНоменклатура)
	
	ТабДок = ДвижениеТовара;
	Обработка = РеквизитФормыВЗначение("Объект");
	Макет = Обработка.ПолучитьМакет("ДвижениеТовара");
	
	ДвиженияПоСкладам = ПолучитьДвиженияПоСкладам();
	
	//период
	ОбластьПериод = Макет.ПолучитьОбласть("Период");
	ОбластьПериод.Параметры.От = Период.ДатаНачала;
	ОбластьПериод.Параметры.До = Период.ДатаОкончания;
	ТабДок.Вывести(ОбластьПериод);
	
	// шапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Для каждого СтрНом Из Объект.РазногласияФСР Цикл
		
		Если НЕ СтрНом.Движения Тогда
			Продолжить;	
		КонецЕсли; 
		
		Для каждого Склад Из СписокСкладов Цикл 
						
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Склад", Склад.Значение);
			ПараметрыОтбора.Вставить("Номенклатура", СтрНом.Номенклатура);
			ПараметрыОтбора.Вставить("Характеристика", СтрНом.Характеристика);
			
			СтрокиНачОст = ДвиженияПоСкладам.НачОст.НайтиСтроки(ПараметрыОтбора);
			СтрокиРегистраторы = ДвиженияПоСкладам.Регистраторы.НайтиСтроки(ПараметрыОтбора);
			ПриходРасходКол = НайтиСуммуПриходРасход(СтрокиРегистраторы);
			СтрокиКонОст = ДвиженияПоСкладам.КонОст.НайтиСтроки(ПараметрыОтбора);
			
			// Склад
			ОбластьСклад = Макет.ПолучитьОбласть("Склад");
			ОбластьСклад.Параметры.Склад = Склад;
			ОбластьСклад.Параметры.НачОст = ?(СтрокиНачОст.Количество() <> 0, СтрокиНачОст[0].НачальныйОстаток, 0);
			ОбластьСклад.Параметры.СуммаПрих = ПриходРасходКол.Приход;
			ОбластьСклад.Параметры.СуммаРасх = ПриходРасходКол.Расход;
			ОбластьСклад.Параметры.КонОст = ?(СтрокиКонОст.Количество() <> 0, СтрокиКонОст[0].КонечныйОстаток, 0);
						
			// Номенклатура
			ОбластьНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
			ОбластьНоменклатура.Параметры.НачОст = ?(СтрокиНачОст.Количество() <> 0, СтрокиНачОст[0].НачальныйОстаток, 0);
			ОбластьНоменклатура.Параметры.СуммаПрих = ПриходРасходКол.Приход;
			ОбластьНоменклатура.Параметры.СуммаРасх = ПриходРасходКол.Расход;
			ОбластьНоменклатура.Параметры.КонОст = ?(СтрокиКонОст.Количество() <> 0, СтрокиКонОст[0].КонечныйОстаток, 0);
			ОбластьНоменклатура.Параметры.Артикул = СтрНом.Артикул;
			ОбластьНоменклатура.Параметры.Наименование = СтрНом.Номенклатура;
			ОбластьНоменклатура.Параметры.Характеристика = СтрНом.Характеристика;
			ТабДок.Вывести(ОбластьСклад);
			ТабДок.Вывести(ОбластьНоменклатура);	
			
			НачОстРег = ?(СтрокиНачОст.Количество() <> 0, СтрокиНачОст[0].НачальныйОстаток, 0);
			//регистратор
			Для каждого элем Из СтрокиРегистраторы Цикл
				
				ОбластьСтрТ1 = Макет.ПолучитьОбласть("СтрТ1");
				ОбластьСтрТ1.Параметры.Регистратор = элем.Регистратор;
				ОбластьСтрТ1.Параметры.Ссылка = элем.Регистратор; 
				ОбластьСтрТ1.Параметры.НачОстСтр = НачОстРег;
				ОбластьСтрТ1.Параметры.Приход = элем.ВНаличииПриход;
				ОбластьСтрТ1.Параметры.Расход = элем.ВНаличииРасход;
				ОбластьСтрТ1.Параметры.КонОстСтр = НачОстРег + элем.ВНаличииПриход - элем.ВНаличииРасход;
				ТабДок.Вывести(ОбластьСтрТ1);
				
				НачОстРег = Число(ОбластьСтрТ1.Параметры.КонОстСтр);
				
			КонецЦикла;
			
			// ИтогТаблицы1 
			
			ОбластьИтогТаблицы1 = Макет.ПолучитьОбласть("ИтогТаблицы1");
			ОбластьИтогТаблицы1.Параметры.НачОст = ?(СтрокиНачОст.Количество() <> 0, СтрокиНачОст[0].НачальныйОстаток, 0);
			ОбластьИтогТаблицы1.Параметры.СуммаПрих = ПриходРасходКол.Приход;
			ОбластьИтогТаблицы1.Параметры.СуммаРасх = ПриходРасходКол.Расход;
			ОбластьИтогТаблицы1.Параметры.КонОст = ?(СтрокиКонОст.Количество() <> 0, СтрокиКонОст[0].КонечныйОстаток, 0); 
			ТабДок.Вывести(ОбластьИтогТаблицы1);	
			
			// Пропуск
			ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
			ТабДок.Вывести(ОбластьПропуск);
			
		КонецЦикла;
		
		ОбластьПропускФинал = Макет.ПолучитьОбласть("ПропускФинал");
		ТабДок.Вывести(ОбластьПропускФинал);
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьДвиженияПоСкладам()	 
	ТЗ_Номенклатура = Объект.РазногласияФСР.Выгрузить();
	Массив_Склады = СписокСкладов.ВыгрузитьЗначения();
	ТекстВременнойТаблицы = "ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура КАК Номенклатура,
	               |	ВТ_Товары.Характеристика КАК Характеристика
	               |ПОМЕСТИТЬ ОсновныеДанные
	               |ИЗ
	               |	&ВТ_Товары КАК ВТ_Товары
	               |ГДЕ
	               |	ВТ_Товары.Движения
	               |";
		
	ЗапросНачОст = Новый Запрос;
	ЗапросНачОст.УстановитьПараметр("ВТ_Товары", ТЗ_Номенклатура);
	ЗапросНачОст.УстановитьПараметр("Склады", Массив_Склады);
	ЗапросНачОст.УстановитьПараметр("НачалоПериода", НачалоДня(Период.ДатаНачала));
	ЗапросНачОстТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОсновныеДанные.Номенклатура КАК Номенклатура,
	               |	ОсновныеДанные.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК НачальныйОстаток
	               |ИЗ
	               |	ОсновныеДанные КАК ОсновныеДанные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&НачалоПериода, Склад В (&Склады)) КАК ТоварыНаСкладахОстатки
	               |		ПО ОсновныеДанные.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ОсновныеДанные.Характеристика = ТоварыНаСкладахОстатки.Характеристика
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОсновныеДанные.Номенклатура,
	               |	ОсновныеДанные.Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад
	               |
	               |";
	ЗапросНачОст.Текст = ТекстВременнойТаблицы + ";" + ЗапросНачОстТекст;
	НачОстРез = ЗапросНачОст.Выполнить().Выгрузить();
	
	ЗапросРегистраторы = Новый Запрос;
	ЗапросРегистраторы.УстановитьПараметр("ВТ_Товары", ТЗ_Номенклатура);
	ЗапросРегистраторы.УстановитьПараметр("Склады", Массив_Склады);
	ЗапросРегистраторы.УстановитьПараметр("НачалоПериода", НачалоДня(Период.ДатаНачала));
	ЗапросРегистраторы.УстановитьПараметр("КонецПериода", КонецДня(Период.ДатаОкончания));
	ЗапросРегистраторыТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                          |	ОсновныеДанные.Номенклатура КАК Номенклатура,
	                          |	ОсновныеДанные.Характеристика КАК Характеристика,
	                          |	ТоварыНаСкладахОбороты.Склад КАК Склад,
	                          |	ТоварыНаСкладахОбороты.Регистратор КАК Регистратор,
	                          |	ТоварыНаСкладахОбороты.Регистратор.Дата КАК Дата,
	                          |	ТоварыНаСкладахОбороты.ВНаличииПриход КАК ВНаличииПриход,
	                          |	ТоварыНаСкладахОбороты.ВНаличииРасход КАК ВНаличииРасход
	                          |ИЗ
	                          |	ОсновныеДанные КАК ОсновныеДанные
	                          |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Склад В (&Склады)) КАК ТоварыНаСкладахОбороты
	                          |		ПО ОсновныеДанные.Номенклатура = ТоварыНаСкладахОбороты.Номенклатура
	                          |			И ОсновныеДанные.Характеристика = ТоварыНаСкладахОбороты.Характеристика
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	Дата"; 
	ЗапросРегистраторы.Текст = ТекстВременнойТаблицы + ";" + ЗапросРегистраторыТекст;
	РегистраторыРез = ЗапросРегистраторы.Выполнить().Выгрузить();	
	
	ЗапросКонОст = Новый Запрос;
	ЗапросКонОст.УстановитьПараметр("ВТ_Товары", ТЗ_Номенклатура);
	ЗапросКонОст.УстановитьПараметр("Склады", Массив_Склады);
	ЗапросКонОст.УстановитьПараметр("КонецПериода", КонецДня(Период.ДатаОкончания));
	ЗапросКонОстТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОсновныеДанные.Номенклатура КАК Номенклатура,
	               |	ОсновныеДанные.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК КонечныйОстаток
	               |ИЗ
	               |	ОсновныеДанные КАК ОсновныеДанные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&КонецПериода, Склад В (&Склады)) КАК ТоварыНаСкладахОстатки
	               |		ПО ОсновныеДанные.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ОсновныеДанные.Характеристика = ТоварыНаСкладахОстатки.Характеристика
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОсновныеДанные.Номенклатура,
	               |	ОсновныеДанные.Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад
	               |"; 
	ЗапросКонОст.Текст = ТекстВременнойТаблицы + ";" + ЗапросКонОстТекст;
	КонОстРез = ЗапросКонОст.Выполнить().Выгрузить();
	
	Данные = Новый Структура; 
	Данные.Вставить("НачОст", НачОстРез);
	Данные.Вставить("Регистраторы", РегистраторыРез);
	Данные.Вставить("КонОст", КонОстРез);
	  	
	Возврат Данные;

КонецФункции // ()

&НаСервере
Функция НайтиСуммуПриходРасход(СтрокиРегистраторы)
    ПриходРасходКол = Новый Структура;
	ПриходКол = 0;
	РасходКол = 0;
	Для каждого элем Из СтрокиРегистраторы Цикл
		ПриходКол = ПриходКол + элем.ВНаличииПриход;
		РасходКол = РасходКол + элем.ВНаличииРасход;
	КонецЦикла;
	ПриходРасходКол.Вставить("Приход", ПриходКол);
	ПриходРасходКол.Вставить("Расход", РасходКол);
	Возврат ПриходРасходКол;
КонецФункции // ()


&НаКлиенте
Процедура ПоказатьДвижение(Команда)
	ОчиститьТабДок(); 
	ПоказатьДвижениеНаСервере(ВсяРазличающаясяНоменклатура);			
КонецПроцедуры 

&НаСервере
Процедура ОчиститьТабДок()

	ДвижениеТовара.Очистить();	

КонецПроцедуры


&НаКлиенте
Процедура ДвижениеТовараВыбор(Элемент, Область, СтандартнаяОбработка) 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого элем Из Объект.РазногласияФСР Цикл
		элем.Движения = Истина;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсе(Команда)
	Для каждого элем Из Объект.РазногласияФСР Цикл
		элем.Движения = Ложь;	
	КонецЦикла;
КонецПроцедуры
